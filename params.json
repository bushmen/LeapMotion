{"name":"Systemy Zdecentralizowane i Agentowe - Projekt","tagline":"","body":"### Skład zespołu\r\n* Filip Buszko [filipbuszko@gmail.com](filipbuszko@gmail.com)\r\n* Marcin Lis [tennlos@gmail.com](tennlos@gmail.com)\r\n\r\n### Technologie\r\n* [Leap Motion](https://www.leapmotion.com/)\r\n* C#\r\n\r\n### Temat projektu\r\nTematem naszego projektu jest stworzenie aplikacji umożliwiającej sterowanie robota przy pomocy urządzenia Leap Motion. Mamy umożliwić podstawowe funkcjonalności takie jak ruch w przód, w tył, skręcanie, ale również umiejętność samodzielnego dotarcia do celu, omijania przeszkód itp. \r\n\r\n### Rozszerzenie API robota \"Panda\" o język C# #\r\nW związku z tym, że nasz projekt chcielibyśmy tworzyć w języku C# niezbędne była możliwość komunikacji z robotem przy użyciu API w tym języku. Po przestudiowaniu dokumentacji projektu Amber, wspomagającego sterowanie robotem opartym na komputerze Pandaboard zdecydowaliśmy się na stworzenie biblioteki klienckiej w języku C#. Głównym ograniczeniem rozszerzania API jest kompatybilność biblioteki Protocol Buffers. Na szczęście znaleźliśmy cztery projekty wspierające język C# i ostatecznie zdecydowaliśmy się na: [protobuf-csharp-port](https://code.google.com/p/protobuf-csharp-port/). \r\n\r\n### Harmonogram prac:\r\n* Stworzenie API C# do sterowania robotem Panda - 23.04\r\n * implementacja klas klienckich 13.04\r\n * stworzenie dema 18.04\r\n * testy na fizycznym urządzeniu 23.04\r\n* Sterowanie robotem przy pomocy Leap Motion - 14.05\r\n * implementacja logiki odpowiedzialnej za tłumaczenie gestów ręki na ruch robotem 7.05\r\n * testy na fizycznym urządzeniu - 14.05\r\n* Sterowanie ramieniem robota przy pomocy Leap Motion - 28.05\r\n * implementacja logiki odpowiedzialnej za tłumaczenie gestów ręki na ruch ramienia robota 21.05\r\n * testy na fizycznym urządzeniu - 28.05\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}